$date
	Fri Mar  7 06:46:54 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module alu_control_tb $end
$var wire 1 ! op_3 $end
$var wire 1 " op_2 $end
$var wire 1 # op_1 $end
$var wire 1 $ op_0 $end
$var wire 4 % op [3:0] $end
$var wire 1 & i_30 $end
$var wire 1 ' i_14 $end
$var wire 1 ( i_13 $end
$var wire 1 ) i_12 $end
$var wire 1 * alu_op_1 $end
$var wire 1 + alu_op_0 $end
$var reg 2 , alu_op [1:0] $end
$var reg 4 - instr_bits [3:0] $end
$var integer 32 . pass_count [31:0] $end
$scope module uut $end
$var wire 2 / alu_op [1:0] $end
$var wire 4 0 instr_bits [3:0] $end
$var wire 1 1 temp1 $end
$var wire 1 2 temp2 $end
$var wire 1 3 temp3 $end
$var wire 1 4 temp4 $end
$var wire 1 5 temp5 $end
$var wire 1 6 temp6 $end
$var wire 1 7 temp7 $end
$var wire 1 8 temp8 $end
$var wire 1 9 temp9 $end
$var wire 4 : op [3:0] $end
$var wire 1 ; i_30 $end
$var wire 1 < i_14 $end
$var wire 1 = i_13 $end
$var wire 1 > i_12 $end
$var wire 1 ? alu_op_1 $end
$var wire 1 @ alu_op_0 $end
$upscope $end
$scope task check_output $end
$var reg 4 A actual [3:0] $end
$var reg 4 B expected [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx B
bx A
0@
0?
x>
x=
x<
x;
b10 :
09
18
07
x6
x5
x4
x3
12
11
bx 0
b0 /
b0 .
bx -
b0 ,
0+
0*
x)
x(
x'
x&
b10 %
0$
1#
0"
0!
$end
#10000
1"
08
b110 %
b110 :
01
1+
1@
b1 ,
b1 /
b1 .
b10 A
b10 B
#20000
1#
0"
16
15
14
13
19
02
b10 %
b10 :
11
0&
0'
0(
0)
0;
0<
0=
0>
1*
0+
1?
0@
b0 -
b0 0
b10 ,
b10 /
b10 .
b110 A
b110 B
#30000
1"
b110 %
b110 :
17
06
1&
1;
b1000 -
b1000 0
b11 .
b10 A
b10 B
#40000
0"
0#
b0 %
b0 :
07
09
16
05
04
03
0&
1'
1(
1)
0;
1<
1=
1>
b111 -
b111 0
b100 .
b110 A
b110 B
#50000
1$
b1 %
b1 :
13
0)
0>
b110 -
b110 0
b101 .
b0 A
b0 B
#60000
b110 .
b1 A
b1 B
