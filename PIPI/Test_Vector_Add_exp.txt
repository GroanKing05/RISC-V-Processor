// Explanation of vector addition code <Test_Vector_Add.txt>

addi x4, x0, 5      // x4 = 5
add x5, x4, x4      // x5 = 10
add x6, x5, x5      // x6 = 20
add x7, x6, x6      // x7 = 40
addi x10, x10, 1    // x10 = 1
addi x11, x0, 7     // x11 = 7
sd x10, 0(x5)       // store 1 at mem[10]
sd x11, 0(x6)       // store 7 at mem[20]
add x11, x11, x10   // x11 = 8
add x10, x10, x10   // x10 = 2
sd x10, 1(x5)       // store 2 at mem[11]
sd x11, 1(x6)       // store 8 at mem[21]
addi x10, x0, 3     // x10 = 3
addi x11, x0, 9     // x11 = 9
sd x10, 2(x5)       // store 3 at mem[12]
sd x11, 2(x6)       // store 9 at mem[22]
add x20, x5, x3     // calculate address to be accessed of A
add x21, x6, x3     // calculate address to be accessed of B
ld x22, 0(x20)      // load A[i]
ld x23, 0(x21)      // load B[i]
add x24, x22, x23   // compute sum
add x25, x7, x3     // calculate address to be accessed of C
sd x24, 0(x25)      // store the sum
addi x3, x3, 1      // increment loop var
beq x4, x4, 4       // exit condition
beq x0, x0, -18     // loop condition if exit fails
ld x15, 0(x7)       // load C[0]
ld x16, 1(x7)       // load C[1]
ld x17, 2(x7)       // load C[2]